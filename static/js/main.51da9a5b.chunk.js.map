{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wYA+CeA,MA1Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OACAC,QACAC,UACAC,SACAC,YAIJ,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,WCoBSC,G,kNA7CfR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,kEAWVQ,KAAKN,c,+BAEG,IAAD,EACyBM,KAAKjB,MAA3BS,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACE,6BAASb,UAAU,aAChBY,EACC,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZa,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GApCfwB,IAAMC,Y,MCWVC,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAK1B,UAAU,oBACb,8IAIA,8DCOS6B,E,kLAfQ,IAAD,EACYT,KAAKM,MAA3BI,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS3B,OACX4B,EAAQE,KAAK,O,+BAGP,IACAH,EAAaV,KAAKM,MAAlBI,SACR,OAAIA,EAAS3B,MACJ,8BAAO2B,EAAS3B,MAAMP,OAEtB,S,GAZQ2B,IAAMC,W,MCWZU,MATf,WACI,OACI,yBAAKlC,UAAW,OACZ,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCWGkC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,kBAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWb,IAChC,kBAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,MCT1CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.51da9a5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres\r\n          }\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n\r\n// id, year, title, summary, poster, genres <- props \r\n//function component의 인자로 props 말고 props의 특정 값만 가져올 때는 꼭 curly bracket으로 감싸야함","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n      isLoading: true,\r\n      movies: []\r\n    };\r\n    getMovies = async () => {\r\n      const {\r\n        data: {\r\n          data: { movies }\r\n        }\r\n      } = await axios.get(\r\n        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n      );\r\n      this.setState({ movies, isLoading: false });\r\n    };\r\n    componentDidMount() {\r\n      this.getMovies();\r\n    }\r\n    render() {\r\n        const { isLoading, movies } = this.state;\r\n        return (\r\n          <section className=\"container\">\r\n            {isLoading ? (\r\n              <div className=\"loader\">\r\n                <span className=\"loader__text\">Loading...</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"movies\">\r\n                {movies.map(movie => (\r\n                  <Movie\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default Home;\r\n\r\n  //await: axios가 끝날 때 까지 기다렸다가 계속\r\n\r\n  // setTimeout( () => {\r\n  //   this.setState({ isLoading: false});\r\n  // }, 6000);\r\n  // fetch위에 있는 작은 layer\r\n  //데이터를 잡기 위해\r\n\r\n  //this will happen after 6 seconds\r\n  //이론적으로 componentDidMount에서 data를 fetch 함\r\n  //axios.get는 시간이 오래 걸릴 수 있으므로 javasscript에게 componentDidMount함수가 끝날 때 까지\r\n  //약간 시간이 걸릴 수 있다고 말해야 함.\r\n\r\n  \r\n// const foodILike = [\r\n//   {\r\n//     id:1,\r\n//     name: \"Kimchi\",\r\n//     image:\r\n//       \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\",\r\n//     rating: 3\r\n//   },\r\n//   {\r\n//     id:2,\r\n//     name: \"bulgogi\",\r\n//       image:\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/%ED%8C%8C%EB%B6%88%EA%B3%A0%EA%B8%B0.JPG/1024px-%ED%8C%8C%EB%B6%88%EA%B3%A0%EA%B8%B0.JPG\",\r\n//     rating: 4\r\n//     },\r\n//   {\r\n//     id:3,\r\n//     name: \"kimbap\",\r\n//     image:\r\n//       \"https://recipe1.ezmember.co.kr/cache/recipe/2016/06/29/e7401296033ab8e4297cd53d71e1bba91.jpg\",\r\n//     rating: 4.9\r\n//     },\r\n//   {\r\n//     id:4,\r\n//     name: \"samgyetang\",\r\n//     image:\r\n//       \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\r\n//     rating: 4.8\r\n//     },\r\n// ];\r\n\r\n// function renderFood(dish){\r\n//   console.log(dish);\r\n//   return <Food name = {dish.name} picture={dish.image} />\r\n// }\r\n\r\n// function Food({ name, picture, rating }) {\r\n//   //console.log(props.fav);\r\n//   return (\r\n//     <div>\r\n//       <h2>I like {name} </h2>\r\n//       <h4>{rating}/5.0</h4>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// Food.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   rating: PropTypes.number,\r\n// };\r\n\r\n// class App extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     console.log(\"hello\");\r\n//   }\r\n//   state = {\r\n//     count: 0,\r\n//   };\r\n\r\n//   add = () => {\r\n//     //console.log(\"add\");\r\n//     this.setState(current => ({count: current.count + 1}));\r\n//   };\r\n\r\n//   minus = () => {\r\n//     // console.log(\"minus\");\r\n//     this.setState(current => ({count: current.count - 1}));\r\n//   };\r\n\r\n//   componentDidMount(){\r\n//     console.log(\"component rendered\");\r\n//   }\r\n\r\n//   componentDidUpdate() {\r\n//     console.log(\"I just updated\");\r\n//   }\r\n\r\n//   // componentWillMount(){\r\n//   //   console.log(\"Goodbye, cruel world\")''\r\n//   // }\r\n\r\n//   render() {\r\n//     console.log(\"Im rendering\");\r\n//     return (\r\n//       <div>\r\n//         <h1> The number is: {this.state.count}</h1>\r\n//         <button onClick={this.add}>Add</button>\r\n//         <button onClick={this.minus}>minus</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//react는 자동적으로 너의 class component의 render method를 실행해! 자동으로!\r\n//class component는 우리가 원하는 state라는 녀석을 가지고 있음 \\\r\n//state는 object이고 component의 data를 넣을 공간이 있고, 이 데이터는 변함\r\n//this.add() -> 즉시, this.add -> 클릭 할 때만\r\n//setState를 사용하지 않으면 새 state와 함께 render function이 호출되지 않을 거야\r\n//매 순간 너가 setState를 호출할 때 마다 react는 새로운 state와 함께 render function을 호출할 꺼야\r\n\r\n// function App() {\r\n//   return (\r\n//     <div>\r\n//       {foodILike.map(dish =>(\r\n//         <Food key = {dish.id} name = {dish.name} picture={dish.image} rating={dish.rating} />\r\n//       ))}\r\n//       {/* map은 여기서 뭐가 돌아오든 array로 돌려줌 */}\r\n//       {/* <h1>Hello!</h1> */}\r\n//       {/* {foodILike.map(dish => <Food name = {dish.name} picture = {dish.image}/>)} */}\r\n//       {/* <Food fav=\"kimchi\" />\r\n//       <Food fav=\"ramen\" />\r\n//       <Food fav=\"meat\" /> */}\r\n//       {/* html의  <div class= \"hello\"> </div> 와 유사*/}\r\n//       {/* food component에 fav라는 이름의 property를 kimchu라는 value로 줌  */}\r\n//     </div>\r\n//   );\r\n// }\r\n//react는 당신이 거기에 쓰는 모든 요소를 생성함!\r\n//자바스크립트와 함께 그것들을 만들고\r\n//그것들을 html로 만듬\r\n//너의 모든 react application을 div 사이에 넣어! ok?\r\n//react는 소스코드에 처음부터 html를 넣지않고, html에서 html을 추가하거나 제거하는 법을 알고 잇음\r\n//그래서 application이 이것을 로드할 때, 빈 html을 로드하게 되고\r\n//그런 다음에 내가 component에 작성해뒀던 것을 react가 html을 밀어넣게 됨!\r\n//따라서 검사 해보면 div와 h1이 있지만 소스코드(index.html)에는 존재하지 않음\r\n//이 것이 react가 빠른 이유, virtual이고 존재하지 않기 때문 (virtual DOM(Document Object Model))\r\n\r\n//component는 HTML을 반환하는 함수\r\n\r\n//state는 보통 우리가 동적데이터와 함께 작업할 때 만들어져, 변하는 데이터, 존재하지 않는 데이터,\r\n//그리고 생겨나고 그러고선 사라지고 또는 변경된 데이터, 하나인 데이터 그리고 두개가 되고 또는 0이 되는 그런 종류의 것들\r\n//이게 dynamic data 그리고 이런 props는 우리는 돕지않아 우리가 필요한 건 state\r\n\r\n//function component는 function이고 뭔가를 return해 그리고 screen에 표시돼, class component는 class야\r\n//하지만 react component로 부터 확장되고 screen에 표시돼\r\n\r\n//map은 array의 각 item에서 function을 실행하는 array를 가지는 javascript function이며\r\n//그 function의 result를 갖는 array를 나에게 줌\r\n// const friends = [\"dal\", \"mark\", \"lynn\", \"japan guy\"];\r\n// friends.map(function(current){\r\n//   console.log(current);\r\n//   return 0;\r\n// })\r\n//\r\n//result:\r\n// dal\r\n// mark\r\n// lynn\r\n// japan guy\r\n// [0, 0, 0, 0]\r\n\r\n//start command -> npm start\r\n\r\n//npm run build임 npm build가 아니라 ","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default Detail;\r\n\r\n//실행 순서 render() - > componentDidMount\r\n\r\n// function Detail(location){\r\n//     console.log(location);\r\n//     return <span>hello</span>;\r\n// }\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n        <div className= \"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n\n//exact은 / 만 허용하겠다는 소리 exact 없으면 / something도 허용됨 \n//Navigation 안의 있는 Link는 반드시 Router안에 있어야함 \n\n//BrowserRouter를 사용해도 되지만 github page에 upload할 때, 애로사항이 많아서 HashRouter를 사용함\n//Route의 원리\n// function App(){\n//   return <HashRouter>\n//     <Route path=\"/home\">\n//       <h1>Home</h1>\n//     </Route>\n//     <Route path=\"/home/introduction\">\n//       <h1>Introduction</h1>\n//     </Route>\n//     <Route path=\"/about\">\n//       <h1>About</h1>\n//     </Route>\n//   </HashRouter>;\n// }\n\n\n//path를 선택하면 그 해당 화면을 보여주는 알고리즘 \n//꼭 path와 화면의 이름이 같을 필요는 없음 ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"potato\"));\n\n//react application은 한번에 하나의 component만 rendering 할 수 있음\n//따라서 모든 것은 application 안에 들어가야만 함\n//application 안에서 많은 component를 넣을 수 있어, 그리고 이러한 component안에 더 많은 component를 import할 수 있어\n\n\n//component는 HTML을 반환하는 함수\n//<App /> -> 이 부분이 우리가 component를 사용하고자 할 때, component의 형태\n//react는 component를 사용해서 html처럼 작성하려는 경우에 필요\n//javascript와 HTML 사이의 이러한 조합을 jsx라고 부름\n"],"sourceRoot":""}